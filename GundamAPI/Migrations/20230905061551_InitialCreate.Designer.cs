// <auto-generated />
using System;
using GundamAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GundamAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230905061551_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArmamentGundam", b =>
                {
                    b.Property<int>("ArmamentsId")
                        .HasColumnType("int");

                    b.Property<int>("GundamsId")
                        .HasColumnType("int");

                    b.HasKey("ArmamentsId", "GundamsId");

                    b.HasIndex("GundamsId");

                    b.ToTable("ArmamentGundam");
                });

            modelBuilder.Entity("FeatureGundam", b =>
                {
                    b.Property<int>("FeaturesId")
                        .HasColumnType("int");

                    b.Property<int>("GundamsId")
                        .HasColumnType("int");

                    b.HasKey("FeaturesId", "GundamsId");

                    b.HasIndex("GundamsId");

                    b.ToTable("FeatureGundam");
                });

            modelBuilder.Entity("GundamAPI.Models.Armament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Armaments");
                });

            modelBuilder.Entity("GundamAPI.Models.Faction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Factions");
                });

            modelBuilder.Entity("GundamAPI.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("GundamAPI.Models.Gundam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PilotId")
                        .HasColumnType("int");

                    b.Property<int>("ShowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactionId");

                    b.HasIndex("ShowId");

                    b.ToTable("Gundams");
                });

            modelBuilder.Entity("GundamAPI.Models.GundamArmament", b =>
                {
                    b.Property<int>("GundamId")
                        .HasColumnType("int");

                    b.Property<int>("ArmamentId")
                        .HasColumnType("int");

                    b.HasKey("GundamId", "ArmamentId");

                    b.HasIndex("ArmamentId");

                    b.ToTable("GundamArmaments");
                });

            modelBuilder.Entity("GundamAPI.Models.GundamFeature", b =>
                {
                    b.Property<int>("GundamId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.HasKey("GundamId", "FeatureId");

                    b.HasIndex("FeatureId");

                    b.ToTable("GundamFeatures");
                });

            modelBuilder.Entity("GundamAPI.Models.Pilot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<int>("GundamId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactionId");

                    b.HasIndex("GundamId")
                        .IsUnique();

                    b.HasIndex("ShowId");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("GundamAPI.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GundamId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GundamId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("GundamAPI.Models.Reviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("GundamAPI.Models.Show", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Episodes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("ArmamentGundam", b =>
                {
                    b.HasOne("GundamAPI.Models.Armament", null)
                        .WithMany()
                        .HasForeignKey("ArmamentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GundamAPI.Models.Gundam", null)
                        .WithMany()
                        .HasForeignKey("GundamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FeatureGundam", b =>
                {
                    b.HasOne("GundamAPI.Models.Feature", null)
                        .WithMany()
                        .HasForeignKey("FeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GundamAPI.Models.Gundam", null)
                        .WithMany()
                        .HasForeignKey("GundamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GundamAPI.Models.Gundam", b =>
                {
                    b.HasOne("GundamAPI.Models.Faction", "Faction")
                        .WithMany("Gundams")
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GundamAPI.Models.Show", "Show")
                        .WithMany("Gundams")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faction");

                    b.Navigation("Show");
                });

            modelBuilder.Entity("GundamAPI.Models.GundamArmament", b =>
                {
                    b.HasOne("GundamAPI.Models.Gundam", "Gundam")
                        .WithMany("GundamArmaments")
                        .HasForeignKey("ArmamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GundamAPI.Models.Armament", "Armaments")
                        .WithMany("GundamArmaments")
                        .HasForeignKey("GundamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Armaments");

                    b.Navigation("Gundam");
                });

            modelBuilder.Entity("GundamAPI.Models.GundamFeature", b =>
                {
                    b.HasOne("GundamAPI.Models.Gundam", "Gundam")
                        .WithMany("GundamFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GundamAPI.Models.Feature", "Feature")
                        .WithMany("GundamFeatures")
                        .HasForeignKey("GundamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Gundam");
                });

            modelBuilder.Entity("GundamAPI.Models.Pilot", b =>
                {
                    b.HasOne("GundamAPI.Models.Faction", "Faction")
                        .WithMany("Pilots")
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GundamAPI.Models.Gundam", "Gundam")
                        .WithOne("Pilot")
                        .HasForeignKey("GundamAPI.Models.Pilot", "GundamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GundamAPI.Models.Show", "Show")
                        .WithMany("Pilots")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Faction");

                    b.Navigation("Gundam");

                    b.Navigation("Show");
                });

            modelBuilder.Entity("GundamAPI.Models.Review", b =>
                {
                    b.HasOne("GundamAPI.Models.Gundam", "Gundam")
                        .WithMany("Reviews")
                        .HasForeignKey("GundamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GundamAPI.Models.Reviewer", "Reviewer")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gundam");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("GundamAPI.Models.Armament", b =>
                {
                    b.Navigation("GundamArmaments");
                });

            modelBuilder.Entity("GundamAPI.Models.Faction", b =>
                {
                    b.Navigation("Gundams");

                    b.Navigation("Pilots");
                });

            modelBuilder.Entity("GundamAPI.Models.Feature", b =>
                {
                    b.Navigation("GundamFeatures");
                });

            modelBuilder.Entity("GundamAPI.Models.Gundam", b =>
                {
                    b.Navigation("GundamArmaments");

                    b.Navigation("GundamFeatures");

                    b.Navigation("Pilot")
                        .IsRequired();

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("GundamAPI.Models.Reviewer", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("GundamAPI.Models.Show", b =>
                {
                    b.Navigation("Gundams");

                    b.Navigation("Pilots");
                });
#pragma warning restore 612, 618
        }
    }
}
